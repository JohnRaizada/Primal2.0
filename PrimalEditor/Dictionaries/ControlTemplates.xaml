<ResourceDictionary x:Class="PrimalEditor.Dictionaries.ControlTemplates"
					xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:local="clr-namespace:PrimalEditor.Dictionaries"
					xmlns:utl="clr-namespace:PrimalEditor.Utilities.Controls"
					xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
					xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions">
	<FontFamily x:Key="DarumadropOne">pack://application:,,,/Resources/Fonts/#Darumadrop One</FontFamily>
	<local:ContentViewModeToVisibilityConverter x:Key="ContentViewModeToVisibilityConverter" />
	<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
	<local:InvertedBooleanToVisibilityConverter x:Key="InvertedBooleanToVisibilityConverter" />
	<Style x:Key="EnableDisableTextBlockStyle" TargetType="{x:Type TextBlock}">
		<Setter Property="Foreground" Value="{StaticResource Editor.FontBrush}" />
		<Setter Property="FontWeight" Value="Normal"/>
		<Setter Property="Margin" Value="1"/>
		<Setter Property="Padding" Value="1"/>
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{StaticResource Editor.Disabled.FontBrush}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="EnableDisableHeadingTextBlockStyle" TargetType="{x:Type TextBlock}">
		<Setter Property="Foreground" Value="{StaticResource Editor.FontBrush}" />
		<Setter Property="FontWeight" Value="SemiBold"/>
		<Setter Property="FontSize" Value="13"/>
		<Setter Property="Margin" Value="1"/>
		<Setter Property="Padding" Value="1"/>
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{StaticResource Editor.Disabled.FontBrush}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="EnableDisableItemTextBlockStyle" TargetType="{x:Type TextBlock}">
		<Setter Property="Foreground" Value="{StaticResource Editor.FontBrush}" />
		<Setter Property="FontWeight" Value="Normal"/>
		<Setter Property="Margin" Value="20,1"/>
		<Setter Property="Padding" Value="1"/>
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{StaticResource Editor.Disabled.FontBrush}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="EnableDisableSubItemTextBlockStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource EnableDisableItemTextBlockStyle}">
		<Setter Property="Padding" Value="20,1"/>
	</Style>
	<Style x:Key="EnableDisableNotificationTextBlockStyle" TargetType="{x:Type TextBlock}">
		<Setter Property="Foreground" Value="{StaticResource Editor.OrangeBrush}" />
		<Setter Property="FontWeight" Value="Normal"/>
		<Setter Property="Margin" Value="1"/>
		<Setter Property="Padding" Value="1"/>
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{StaticResource Editor.Disabled.OrangeBrush}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="EnableDisableTextBoxStyle" TargetType="{x:Type TextBox}">
		<Setter Property="Foreground" Value="{StaticResource Editor.FontBrush}" />
		<Setter Property="Background" Value="{StaticResource Editor.Window.GrayBrush2}"/>
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{StaticResource Editor.Disabled.FontBrush}" />
				<Setter Property="Background" Value="{StaticResource Editor.Window.GrayBrush3}"/>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="EnableDisablePasswordBoxStyle" TargetType="{x:Type PasswordBox}">
		<Setter Property="Foreground" Value="{StaticResource Editor.FontBrush}" />
		<Setter Property="Background" Value="{StaticResource Editor.Window.GrayBrush2}"/>
		<Setter Property="FontWeight" Value="Normal"/>
		<Setter Property="Margin" Value="1"/>
		<Setter Property="Padding" Value="1"/>
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{StaticResource Editor.Disabled.FontBrush}" />
				<Setter Property="Background" Value="{StaticResource Editor.Window.GrayBrush3}"/>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style TargetType="{x:Type Expander}" x:Key="EnableDisableSubItemUniformExpander">
		<Setter Property="Foreground" Value="{StaticResource Editor.FontBrush}" />
		<Setter Property="FontWeight" Value="Normal"/>
		<Setter Property="Margin" Value="1"/>
		<Setter Property="Padding" Value="1"/>
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{StaticResource Editor.Disabled.FontBrush}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style TargetType="{x:Type utl:SteppedSlider}" x:Key="EnableDisableSteppedSlider">
		<Setter Property="Foreground" Value="{StaticResource Editor.FontBrush}"/>
		<Setter Property="FontWeight" Value="Normal"/>
		<Setter Property="Margin" Value="1"/>
		<Setter Property="Padding" Value="1"/>
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{StaticResource Editor.Disabled.FontBrush}"/>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style TargetType="{x:Type TextBlock}" x:Key="LightTextBlockStyle">
		<Setter Property="Foreground" Value="{StaticResource Editor.FontBrush}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="HorizontalAlignment" Value="Left"/>
	</Style> 
	<Style TargetType="{x:Type TextBox}" x:Key="TextBoxStyle">
		<Setter Property="Foreground" Value="{StaticResource Editor.FontBrush}"/>
		<Setter Property="Background" Value="{StaticResource Editor.Window.GrayBrush2}"/>
		<Setter Property="BorderBrush" Value="{StaticResource Editor.Window.GrayBrush4}"/>
		<Setter Property="SelectionBrush" Value="White"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="Padding" Value="0,2"/>
	</Style>
	<Style TargetType="{x:Type TextBox}" x:Key="{x:Type TextBox}" BasedOn="{StaticResource TextBoxStyle}">
		<EventSetter Event="KeyDown" Handler="OnTextBox_KeyDown"/>
	</Style>
	<Style x:Key="FocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{StaticResource Editor.FontBrush}" SnapsToDevicePixels="true" StrokeThickness="1"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type TextBox}" x:Key="TextBoxStyle_WithRename" BasedOn="{StaticResource TextBoxStyle}">
		<EventSetter Event="KeyDown" Handler="OnTextBoxRename_KeyDown"/>
		<EventSetter Event="LostFocus" Handler="OnTextBoxRename_LostFocus"/>
	</Style>
	<Style TargetType="{x:Type Button}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
		<Setter Property="Background">
			<Setter.Value>
				<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
					<GradientStop Color="{StaticResource Editor.Window.GrayColor5}" Offset="0"/>
					<GradientStop Color="{StaticResource Editor.Window.GrayColor4}" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderBrush">
			<Setter.Value>
				<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
					<GradientStop Color="{StaticResource Editor.Window.GrayColor6}" Offset="0"/>
					<GradientStop Color="{StaticResource Editor.Window.GrayColor2}" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="Foreground" Value="{StaticResource Editor.FontBrush}"/>
		<Setter Property="BorderThickness" Value="0,1"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Padding" Value="5,3"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<ControlTemplate.Resources>
						<LinearGradientBrush StartPoint="0,0" EndPoint="0,1" x:Key="Button.Selected.OpacityBrush">
							<GradientStop Color="white" Offset="0"/>
							<GradientStop Color="#88ffffff" Offset="1"/>
						</LinearGradientBrush>
						<LinearGradientBrush StartPoint="0,0" EndPoint="0,1" x:Key="Button.Pressed.OpacityBrush">
							<GradientStop Color="white" Offset="1"/>
							<GradientStop Color="#88ffffff" Offset="0"/>
						</LinearGradientBrush>
						<LinearGradientBrush StartPoint="0,0" EndPoint="0,1" x:Key="Button.Disabled.BackgroundBrush">
							<GradientStop Color="{StaticResource Editor.Window.GrayColor4}" Offset="0"/>
							<GradientStop Color="{StaticResource Editor.Window.GrayColor3}" Offset="1"/>
						</LinearGradientBrush>
						<LinearGradientBrush StartPoint="0,0" EndPoint="0,1" x:Key="Button.Disabled.BorderBrush">
							<GradientStop Color="{StaticResource Editor.Window.GrayColor5}" Offset="0"/>
							<GradientStop Color="{StaticResource Editor.Window.GrayColor1}" Offset="1"/>
						</LinearGradientBrush>
					</ControlTemplate.Resources>
					<Grid>
						<Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="3"/>
						<Border x:Name="borderSelected" SnapsToDevicePixels="True" CornerRadius="3" BorderThickness="0" BorderBrush="Transparent"/>
						<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsDefaulted" Value="true">
							<Setter Property="Background" TargetName="borderSelected" Value="{StaticResource Editor.Selected.BackgroundBrush}"/>
							<Setter Property="OpacityMask" TargetName="borderSelected" Value="{StaticResource Button.Selected.OpacityBrush}"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>
							<Setter Property="Background" TargetName="borderSelected" Value="{StaticResource Editor.Selected.BackgroundBrush}"/>
							<Setter Property="OpacityMask" TargetName="borderSelected" Value="{StaticResource Button.Selected.OpacityBrush}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>
							<Setter Property="Background" TargetName="borderSelected" Value="{StaticResource Editor.Selected.BackgroundBrush}"/>
							<Setter Property="OpacityMask" TargetName="borderSelected" Value="{StaticResource Button.Pressed.OpacityBrush}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Editor.Disabled.FontBrush}"/>
							<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.BackgroundBrush}"/>
							<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.BorderBrush}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<LinearGradientBrush x:Key="ListBoxBackgroundBrush" StartPoint="0,0" EndPoint="1,0.001">
		<GradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Color="White" Offset="0.0" />
				<GradientStop Color="White" Offset="0.6" />
				<GradientStop Color="{StaticResource Editor.FontColor}" Offset="1.2"/>
			</GradientStopCollection>
		</GradientBrush.GradientStops>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="StandardBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Color="White" Offset="0.0"/>
				<GradientStop Color="{StaticResource Editor.Disabled.FontColor}" Offset="1.0"/>
			</GradientStopCollection>
		</GradientBrush.GradientStops>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientBrush.GradientStops>
			<GradientStopCollection>
				<GradientStop Color="{StaticResource Editor.Disabled.FontColor}" Offset="0.0"/>
				<GradientStop Color="{StaticResource Editor.FontColor}" Offset="0.1"/>
				<GradientStop Color="{StaticResource Editor.FontColor}" Offset="0.9"/>
				<GradientStop Color="White" Offset="1.0"/>
			</GradientStopCollection>
		</GradientBrush.GradientStops>
	</LinearGradientBrush>

	<Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
		<Setter Property="Visibility" Value="Hidden"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Border Name="Border" Margin="1" CornerRadius="2" Background="{StaticResource Editor.Disabled.FontBrush}" BorderBrush="{StaticResource Editor.Disabled.FontBrush}" BorderThickness="1">
						<Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource Editor.Window.GrayBrush4}" Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{StaticResource Editor.Disabled.FontBrush}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
		<Setter Property="Visibility" Value="Hidden"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Border Background="Black" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border CornerRadius="4" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0"  Width="8" Margin="8,0,-2,0"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition MaxHeight="0"/>
				<RowDefinition Height="0.00001*"/>
				<RowDefinition MaxHeight="0"/>
			</Grid.RowDefinitions>
			<Border Grid.RowSpan="3" CornerRadius="2" Background="Transparent" />
			<RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z" />
			<Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
				<Track.DecreaseRepeatButton>
					<RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
				</Track.DecreaseRepeatButton>
				<Track.Thumb>
					<Thumb Style="{StaticResource ScrollBarThumb}" Margin="1,0,1,0" Background="{StaticResource Editor.Window.GrayBrush6}" BorderBrush="{StaticResource Editor.Disabled.FontBrush}" />
				</Track.Thumb>
				<Track.IncreaseRepeatButton>
					<RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
				</Track.IncreaseRepeatButton>
			</Track>
			<RepeatButton Grid.Row="3" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z"/>
		</Grid>
	</ControlTemplate>
	<Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Style.Triggers>
			<Trigger Property="Orientation" Value="Vertical">
				<Setter Property="Width" Value="18"/>
				<Setter Property="Height" Value="Auto" />
				<Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<ScrollContentPresenter Grid.Column="1"/>
						<ScrollBar Name="PART_VerticalScrollBar" Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
						<ScrollBar Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1" Grid.Column="1" Value="{TemplateBinding HorizontalOffset}" Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type ListBoxItem}" x:Key="ListBoxItemStyle">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Padding" Value="4,2,0,2" />
		<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBoxItem}">
					<Border x:Name="Bd"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						Background="{TemplateBinding Background}"
						Padding="{TemplateBinding Padding}"
						SnapsToDevicePixels="true">
						<ContentPresenter
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Border>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Selector.IsSelectionActive" Value="False" />
								<Condition Property="IsSelected" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Bd" Property="Background" Value="{StaticResource Editor.Window.GrayBrush4}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Selector.IsSelectionActive" Value="True" />
								<Condition Property="IsSelected" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Bd" Property="Background" Value="{StaticResource Editor.Selected.BackgroundBrush}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Selector.IsSelectionActive" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
								<Condition Property="IsSelected" Value="False" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Bd" Property="Background">
								<Setter.Value>
									<SolidColorBrush Color="{StaticResource Editor.Selected.BackgroundColor}" Opacity="0.5"/>
								</Setter.Value>
							</Setter>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Selector.IsSelectionActive" Value="False" />
								<Condition Property="IsMouseOver" Value="True" />
								<Condition Property="IsSelected" Value="False" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Bd" Property="Background" Value="{StaticResource Editor.Window.GrayBrush4}" />
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="Bd" Property="TextElement.Foreground" Value="{StaticResource Editor.Disabled.FontBrush}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type ListBox}">
		<Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxItemStyle}"/>
		<Setter Property="Background" Value="{StaticResource Editor.Window.GrayBrush2}"/>
		<Setter Property="BorderBrush" Value="{StaticResource Editor.Window.GrayBrush4}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Foreground" Value="{StaticResource Editor.FontBrush}"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
		<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBox}">
					<Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="1" SnapsToDevicePixels="true">
						<ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
							<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</ScrollViewer>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="Selector.IsSelectionActive" Value="True">
							<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Editor.Selected.BackgroundBrush}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource Editor.Window.GrayBrush2}"/>
							<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Editor.Window.GrayBrush4}"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Selector.IsSelectionActive" Value="false"/>
								<Condition Property="IsMouseOver" Value="true"/>
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Editor.Selected.BackgroundBrush}"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsGrouping" Value="true"/>
								<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
							</MultiTrigger.Conditions>
							<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="SimpleButton" TargetType="{x:Type Button}">
		<Setter Property="Background" Value="{StaticResource Editor.Window.GrayBrush3}"/>
		<Setter Property="BorderBrush" Value="{StaticResource Editor.Window.GrayBrush5}"/>
		<Setter Property="Foreground" Value="{StaticResource Editor.Disabled.FontBrush}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
						<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" TargetName="border" Value="{StaticResource Editor.Window.GrayBrush5}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="EnableDisableBorderlessButton" TargetType="{x:Type Button}" BasedOn="{StaticResource SimpleButton}">
		<Setter Property="Foreground" Value="{StaticResource Editor.FontBrush}" />
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Margin" Value="1"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{StaticResource Editor.Disabled.FontBrush}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="ControlButton" TargetType="{x:Type Button}" BasedOn="{StaticResource SimpleButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid SnapsToDevicePixels="True">
						<Border x:Name="borderSelected" SnapsToDevicePixels="True" CornerRadius="1" BorderThickness="0" BorderBrush="Transparent"/>
						<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" TargetName="borderSelected" Value="Transparent"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEnabled" Value="True"/>
								<Condition Property="IsMouseOver" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>
							<Setter Property="Background" TargetName="borderSelected" Value="{StaticResource Editor.Selected.BackgroundBrush}"/>
							<Setter Property="Opacity" TargetName="borderSelected" Value="0.4"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEnabled" Value="True"/>
								<Condition Property="IsPressed" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>
							<Setter Property="Background" TargetName="borderSelected" Value="{StaticResource Editor.Selected.BackgroundBrush}"/>
							<Setter Property="Opacity" TargetName="borderSelected" Value="1"/>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="PrimalWindowStyle" TargetType="{x:Type Window}">
		<Setter Property="BorderBrush" Value="{StaticResource Editor.Selected.BackgroundBrush}"/>
		<Setter Property="Background" Value="{StaticResource Editor.Window.GrayBrush1}"/>
		<Setter Property="WindowChrome.WindowChrome">
			<Setter.Value>
				<WindowChrome CornerRadius="0" ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}" GlassFrameThickness="0" CaptionHeight="20" NonClientFrameEdges="None" UseAeroCaptionButtons="False"/>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Window}">
					<Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
						<Border.Style>
							<Style TargetType="Border">
								<Setter Property="BorderThickness" Value="1"/>
								<Style.Triggers>
									<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=WindowState}" Value="Maximized">
										<Setter Property="BorderThickness" Value="{Binding Source={x:Static SystemParameters.WindowResizeBorderThickness}}"/>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</Border.Style>
						<Grid>
							<AdornerDecorator>
								<ContentPresenter Margin="5,24,5,5"/>
							</AdornerDecorator>
							<DockPanel VerticalAlignment="Top" LastChildFill="False">
								<DockPanel.Resources>
									<Style TargetType="Path">
										<Setter Property="Stroke" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
										<Setter Property="StrokeThickness" Value="1"/>
									</Style>
									<Style TargetType="Button" BasedOn="{StaticResource SimpleButton}">
										<Setter Property="Width" Value="24"/>
										<Setter Property="Height" Value="14"/>
										<Setter Property="Margin" Value="0,2,1,0"/>
										<Setter Property="VerticalAlignment" Value="Top"/>
										<Setter Property="SnapsToDevicePixels" Value="True"/>
										<Setter Property="DockPanel.Dock" Value="Right"/>
										<Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
									</Style>
								</DockPanel.Resources>
								<TextBlock Margin="5,2,0,0" VerticalAlignment="Center" DockPanel.Dock="Left" FontWeight="Bold" Foreground="{StaticResource Editor.FontBrush}" Text="{TemplateBinding Title}"/>
								<Button x:Name="btnClose" Click="OnClose_Button_Click">
									<Button.Content>
										<Grid>
											<Path Data="M1,.5L 8,8.5" Margin="0"/>
											<Path Data="M1,8.5L 8,1.5" Margin="0"/>
										</Grid>
									</Button.Content>
								</Button>
								<Button x:Name="btnRestore" Click="OnMazimizeRestore_Button_Click">
									<Button.Content>
										<Rectangle Stroke="{StaticResource Editor.FontBrush}" StrokeThickness="1" Width="10" Height="8"/>
									</Button.Content>
								</Button>
								<Button x:Name="btnMinimize" Click="OnMinimize_Button_Click">
									<Button.Content>
										<Rectangle Stroke="{StaticResource Editor.FontBrush}" StrokeThickness="1" Width="10" Height="1" Margin="0,4,0,0"/>
									</Button.Content>
								</Button>
							</DockPanel>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="PrimalDialogStyle" TargetType="{x:Type Window}">
		<Setter Property="BorderBrush" Value="{StaticResource Editor.Selected.BackgroundBrush}"/>
		<Setter Property="Background" Value="{StaticResource Editor.Window.GrayBrush1}"/>
		<Setter Property="WindowChrome.WindowChrome">
			<Setter.Value>
				<WindowChrome CornerRadius="0" ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}" GlassFrameThickness="0" CaptionHeight="20" NonClientFrameEdges="None" UseAeroCaptionButtons="False"/>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Window}">
					<Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
						<Border.Style>
							<Style TargetType="Border">
								<Setter Property="BorderThickness" Value="1"/>
								<Style.Triggers>
									<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=WindowState}" Value="Maximized">
										<Setter Property="BorderThickness" Value="{Binding Source={x:Static SystemParameters.WindowResizeBorderThickness}}"/>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</Border.Style>
						<Grid>
							<AdornerDecorator>
								<ContentPresenter Margin="5,24,5,5"/>
							</AdornerDecorator>
							<DockPanel VerticalAlignment="Top" LastChildFill="False">
								<DockPanel.Resources>
									<Style TargetType="Path">
										<Setter Property="Stroke" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
										<Setter Property="StrokeThickness" Value="1"/>
									</Style>
									<Style TargetType="Button" BasedOn="{StaticResource SimpleButton}">
										<Setter Property="Width" Value="24"/>
										<Setter Property="Height" Value="14"/>
										<Setter Property="Margin" Value="0,2,1,0"/>
										<Setter Property="VerticalAlignment" Value="Top"/>
										<Setter Property="SnapsToDevicePixels" Value="True"/>
										<Setter Property="DockPanel.Dock" Value="Right"/>
										<Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
									</Style>
								</DockPanel.Resources>
								<TextBlock Margin="5,2,0,0" VerticalAlignment="Center" DockPanel.Dock="Left" FontWeight="Bold" Foreground="{StaticResource Editor.FontBrush}" Text="{TemplateBinding Title}"/>
								<Button x:Name="btnClose" Click="OnClose_Button_Click">
									<Button.Content>
										<Grid>
											<Path Data="M1,.5L 8,8.5" Margin="0"/>
											<Path Data="M1,8.5L 8,1.5" Margin="0"/>
										</Grid>
									</Button.Content>
								</Button>
							</DockPanel>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type utl:NumberBox}" x:Key="{x:Type utl:NumberBox}">
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type utl:NumberBox}">
					<Grid>
						<TextBlock x:Name="PART_textBlock" Text="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Center">
							<TextBlock.Style>
								<Style TargetType="{x:Type TextBlock}">
									<Style.Triggers>
										<Trigger Property="IsMouseOver" Value="True">
											<Setter Property="Cursor" Value="SizeWE"/>
										</Trigger>
									</Style.Triggers>
								</Style>
							</TextBlock.Style>
						</TextBlock>
						<TextBox x:Name="PART_textBox" BorderThickness="0" Padding="0" Text="{Binding Value, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=Explicit}" Foreground="{TemplateBinding Foreground}" Visibility="Collapsed" Style="{StaticResource TextBoxStyle_WithRename}" HorizontalContentAlignment="Center" HorizontalAlignment="Center"/>
					</Grid>
					<ControlTemplate.Triggers>
						<DataTrigger Binding="{Binding Visibility, ElementName=PART_textBox}" Value="Visible">
							<Setter Property="Visibility" TargetName="PART_textBlock" Value="Collapsed"/>
						</DataTrigger>
						<DataTrigger Binding="{Binding Value, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
							<Setter Property="Background" TargetName="PART_textBlock" Value="{StaticResource Editor.Disabled.FontBrush}"/>
							<Setter Property="ToolTip" TargetName="PART_textBlock" Value="Mixed values"/>
							<Setter Property="MinWidth" TargetName="PART_textBlock" Value="20"/>
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type utl:ScalarBox}" x:Key="{x:Type utl:ScalarBox}">
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="Foreground" Value="{StaticResource Editor.FontBrush}"/>
		<Setter Property="Background" Value="{StaticResource Editor.Window.GrayBrush2}"/>
		<Setter Property="BorderBrush" Value="{StaticResource Editor.Window.GrayBrush5}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="ToolTipService.InitialShowDelay" Value="3000"/>
		<Setter Property="ToolTipService.BetweenShowDelay" Value="1000"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type utl:ScalarBox}">
					<Border x:Name="border" SnapsToDevicePixels="True" Margin="0,2,0,3" Background="{TemplateBinding Background}" Padding="5,2" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="10" BorderThickness="{TemplateBinding BorderThickness}">

						<Grid MinWidth="50" x:Name="grid">
							<TextBlock x:Name="PART_textBlock" Text="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Center">
								<TextBlock.Style>
									<Style TargetType="{x:Type TextBlock}">
										<Style.Triggers>
											<Trigger Property="IsMouseOver" Value="True">
												<Setter Property="Cursor" Value="SizeWE"/>
											</Trigger>
										</Style.Triggers>
									</Style>
								</TextBlock.Style>
							</TextBlock>
							<TextBox x:Name="PART_textBox" BorderThickness="0" Padding="0" Text="{Binding Value, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=Explicit}" Foreground="{TemplateBinding Foreground}" Visibility="Collapsed" Style="{StaticResource TextBoxStyle_WithRename}" HorizontalContentAlignment="Center" HorizontalAlignment="Center"/>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Editor.Window.GrayBrush6}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" TargetName="grid" Value="0.5"/>
						</Trigger>
						<DataTrigger Binding="{Binding Visibility, ElementName=PART_textBox}" Value="Visible">
							<Setter Property="Visibility" TargetName="PART_textBlock" Value="Collapsed"/>
						</DataTrigger>
						<DataTrigger Binding="{Binding Value, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
							<Setter Property="Background" TargetName="PART_textBlock" Value="{StaticResource Editor.Disabled.FontBrush}"/>
							<Setter Property="ToolTip" TargetName="PART_textBlock" Value="Mixed values"/>
							<Setter Property="MinWidth" TargetName="PART_textBlock" Value="20"/>
						</DataTrigger>
					</ControlTemplate.Triggers>

				</ControlTemplate>
			</Setter.Value>
		</Setter>

	</Style>
	<Style TargetType="{x:Type utl:VectorBox}" x:Key="{x:Type utl:VectorBox}">
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="Background" Value="{StaticResource Editor.Window.GrayBrush2}"/>
		<Setter Property="BorderBrush" Value="{StaticResource Editor.Window.GrayBrush5}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type utl:VectorBox}">
					<ControlTemplate.Resources>
						<Style TargetType="{x:Type utl:NumberBox}" BasedOn="{StaticResource {x:Type utl:NumberBox}}">
							<Setter Property="MinWidth" Value="50"/>
							<Setter Property="ToolTipService.InitialShowDelay" Value="3000"/>
							<Setter Property="ToolTipService.BetweenShowDelay" Value="1000"/>
							<Setter Property="Multiplier" Value="{Binding Multiplier, RelativeSource={RelativeSource TemplatedParent}}"/>
							<Setter Property="Minimum" Value="{Binding Minimum, RelativeSource={RelativeSource TemplatedParent}}"/>
							<Setter Property="Maximum" Value="{Binding Maximum, RelativeSource={RelativeSource TemplatedParent}}"/>
						</Style>
					</ControlTemplate.Resources>
					<Border x:Name="border" SnapsToDevicePixels="True" Margin="0,2,0,3" Background="{TemplateBinding Background}" Padding="5,2" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="10" BorderThickness="{TemplateBinding BorderThickness}">
						<Grid x:Name="grid">
							<Grid.ColumnDefinitions>
								<ColumnDefinition x:Name="columnDefinition0"/>
								<ColumnDefinition x:Name="columnDefinition1"/>
								<ColumnDefinition x:Name="columnDefinition2"/>
								<ColumnDefinition x:Name="columnDefinition3"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition x:Name="rowDefinition0"/>
								<RowDefinition x:Name="rowDefinition1"/>
								<RowDefinition x:Name="rowDefinition2"/>
								<RowDefinition x:Name="rowDefinition3"/>
							</Grid.RowDefinitions>
							<utl:NumberBox x:Name="nbX" Foreground="{StaticResource Editor.RedBrush}" Value="{Binding X, RelativeSource={RelativeSource TemplatedParent}}" ToolTip="X value"/>
							<utl:NumberBox x:Name="nbY" Foreground="{StaticResource Editor.GreenBrush}" Value="{Binding Y, RelativeSource={RelativeSource TemplatedParent}}" ToolTip="Y value"/>
							<utl:NumberBox x:Name="nbZ" Foreground="{StaticResource Editor.BlueBrush}" Value="{Binding Z, RelativeSource={RelativeSource TemplatedParent}}" ToolTip="Z value"/>
							<utl:NumberBox x:Name="nbW" Foreground="{StaticResource Editor.FontBrush}" Value="{Binding W, RelativeSource={RelativeSource TemplatedParent}}" ToolTip="W value" Visibility="Collapsed"/>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<DataTrigger Binding="{Binding Orientation, RelativeSource={RelativeSource Self}}" Value="Vertical">
							<Setter Property="Grid.Row" TargetName="nbX" Value="0"/>
							<Setter Property="Grid.Row" TargetName="nbY" Value="1"/>
							<Setter Property="Grid.Row" TargetName="nbZ" Value="2"/>
							<Setter Property="Grid.Row" TargetName="nbW" Value="3"/>
							<Setter Property="Width" TargetName="columnDefinition1" Value="auto"/>
							<Setter Property="Width" TargetName="columnDefinition2" Value="auto"/>
							<Setter Property="Width" TargetName="columnDefinition3" Value="auto"/>
						</DataTrigger>
						<DataTrigger Binding="{Binding Orientation, RelativeSource={RelativeSource Self}}" Value="Horizontal">
							<Setter Property="Grid.Column" TargetName="nbX" Value="0"/>
							<Setter Property="Grid.Column" TargetName="nbY" Value="1"/>
							<Setter Property="Grid.Column" TargetName="nbZ" Value="2"/>
							<Setter Property="Grid.Column" TargetName="nbW" Value="3"/>
							<Setter Property="Height" TargetName="rowDefinition1" Value="auto"/>
							<Setter Property="Height" TargetName="rowDefinition2" Value="auto"/>
							<Setter Property="Height" TargetName="rowDefinition3" Value="auto"/>
						</DataTrigger>
						<DataTrigger Binding="{Binding VectorType, RelativeSource={RelativeSource Self}}" Value="Vector2">
							<Setter Property="Width" TargetName="columnDefinition2" Value="auto"/>
							<Setter Property="Width" TargetName="columnDefinition3" Value="auto"/>
							<Setter Property="Height" TargetName="rowDefinition2" Value="auto"/>
							<Setter Property="Height" TargetName="rowDefinition3" Value="auto"/>
							<Setter Property="Visibility" TargetName="nbZ" Value="Collapsed"/>
						</DataTrigger>
						<DataTrigger Binding="{Binding VectorType, RelativeSource={RelativeSource Self}}" Value="Vector3">
							<Setter Property="Width" TargetName="columnDefinition3" Value="auto"/>
							<Setter Property="Height" TargetName="rowDefinition3" Value="auto"/>
						</DataTrigger>
						<DataTrigger Binding="{Binding VectorType, RelativeSource={RelativeSource Self}}" Value="Vector4">
							<Setter Property="Visibility" TargetName="nbW" Value="Visible"/>
						</DataTrigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Editor.Window.GrayBrush6}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" TargetName="grid" Value="0.5"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type utl:SteppedSlider}" x:Key="{x:Type utl:SteppedSlider}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type utl:SteppedSlider}">
					<StackPanel x:Name="Collector">
						<Slider x:Name="PART_SLIDER" Grid.Row="0" IsSnapToTickEnabled="True" TickPlacement="BottomRight"/>
						<UniformGrid x:Name="PART_STACKPANEL" Grid.Row="1" HorizontalAlignment="Stretch" Margin="0"/>
					</StackPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type utl:CheckboxMatrix}" x:Key="{x:Type utl:CheckboxMatrix}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type utl:CheckboxMatrix}">
					<Grid x:Name="checkBox">
						
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type utl:TextBoxBlockCombo}" x:Key="{x:Type utl:TextBoxBlockCombo}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type utl:TextBoxBlockCombo}">
					<Grid>
						<TextBlock x:Name="PART_TextBlock" Text="{TemplateBinding Text}"/>
						<TextBox x:Name="PART_TextBox" Visibility ="Collapsed" Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		</Style>
		<Style TargetType="{x:Type utl:ExpanderListView}" x:Key="{x:Type utl:ExpanderListView}">
			<Setter Property="Template">
				<Setter.Value>
				<ControlTemplate TargetType="{x:Type utl:ExpanderListView}">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="*"/>
						</Grid.RowDefinitions>
						<Border Grid.Row="0" x:Name="PART_ColumnHeadersBorder" BorderBrush="{StaticResource Editor.Window.GrayBrush3}" BorderThickness="1" Margin="1" Padding="1">
							<Grid x:Name="PART_ColumnHeaders" HorizontalAlignment="Stretch" Margin="1" Grid.IsSharedSizeScope="True" />
						</Border>
						<ScrollViewer Grid.Row="1" >
							<ListView x:Name="PART_ContentList" Background="{StaticResource Editor.Window.GrayBrush4}" BorderBrush="{StaticResource Editor.Window.GrayBrush3}" Foreground="{StaticResource Editor.FontBrush}" Margin="1" Padding="1">
								<ListView.ItemTemplate>
									<DataTemplate>
										<Grid x:Name="ListMenuItemGrid">
											<DockPanel Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type utl:ExpanderListView}}, Path=ContentViewMode, Converter={StaticResource ContentViewModeToVisibilityConverter}}" LastChildFill="False" x:Name="ListViewDockPanel" Margin="1">
												<Grid DockPanel.Dock="Left" Grid.IsSharedSizeScope="True" HorizontalAlignment="Stretch" Margin="1"/>
											</DockPanel>
											<Expander x:Name="ListViewExpander" Background="{StaticResource Editor.Window.GrayBrush4}" Foreground="{StaticResource Editor.FontBrush}" Margin="1" Padding="1" Width="{Binding ElementName=PART_ColumnHeaders,Path=Width}" MaxWidth="{Binding ElementName=PART_ColumnHeaders,Path=MaxWidth}" MinWidth="{Binding ElementName=PART_ColumnHeaders,Path=MinWidth}" >
												<Expander.Style>
													<Style TargetType="{x:Type Expander}">
														<Setter Property="Visibility" Value="Collapsed"/>
														<Style.Triggers>
															<DataTrigger Binding="{Binding ElementName=ListViewDockPanel, Path=IsVisible}" Value="False">
																<Setter Property="Visibility" Value="Visible"/>
															</DataTrigger>
															<DataTrigger Binding="{Binding ElementName=ListViewDockPanel, Path=Visibility}" Value="Hidden">
																<Setter Property="Visibility" Value="Visible"/>
															</DataTrigger>
															<DataTrigger Binding="{Binding ElementName=ListViewDockPanel, Path=Visibility}" Value="Collapsed">
																<Setter Property="Visibility" Value="Visible"/>
															</DataTrigger>
														</Style.Triggers>
													</Style>
												</Expander.Style>
												<Expander.Header>
													<StackPanel Orientation="Horizontal">
														<CheckBox/>
														<TextBlock Text="{Binding Name}"/>
													</StackPanel>
												</Expander.Header>
												<Grid Grid.IsSharedSizeScope="True" HorizontalAlignment="Stretch" x:Name="SecondGrid" Margin="1"/>
											</Expander>
										</Grid>
									</DataTemplate>
								</ListView.ItemTemplate>
								<ListView.ItemsPanel>
									<ItemsPanelTemplate>
										<StackPanel Margin="1"/>
									</ItemsPanelTemplate>
								</ListView.ItemsPanel>
							</ListView>
						</ScrollViewer>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type utl:TextBoxBlockCombo}" x:Key="TextBoxBlockComboWithBorder">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type utl:TextBoxBlockCombo}">
					<Grid>
						<Border x:Name="TextBlockBorder" BorderBrush="{StaticResource Editor.Disabled.FontBrush}" BorderThickness="1">
							<TextBlock x:Name="PART_TextBlock" Text="{TemplateBinding Text}" Background="{StaticResource Editor.Window.GrayBrush2}" Foreground="{StaticResource Editor.FontBrush}" Margin="1" Padding="1"/>
						</Border>
						<TextBox x:Name="PART_TextBox" Visibility ="Collapsed" Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type utl:PasswordBoxView}" x:Key="{x:Type utl:PasswordBoxView}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type utl:PasswordBoxView}">
					<Grid Margin="1">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<Grid Margin="1" Grid.Row="0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<Grid>
								<PasswordBox x:Name="passwordBox" Grid.Column="0" Style="{StaticResource EnableDisablePasswordBoxStyle}" Margin="1" Padding="1"/>
								<TextBox x:Name="textBox" Grid.Column="0" Style="{StaticResource EnableDisableTextBoxStyle}" Margin="1" Padding="1" Visibility="Hidden"/>
							</Grid>
							<Grid Grid.Column="1" x:Name="visibilityIcons">
								<Path x:Name="hideIcon" Visibility="Hidden" Margin="1" Stretch="Uniform" Height="20" Width="20" Stroke="{StaticResource Editor.Disabled.FontBrush}" StrokeThickness="2" Data="M3.99989 4L19.9999 20M16.4999 16.7559C15.1473 17.4845 13.6185 17.9999 11.9999 17.9999C8.46924 17.9999 5.36624 15.5478 3.5868 13.7788C3.1171 13.3119 2.88229 13.0784 2.7328 12.6201C2.62619 12.2933 2.62616 11.7066 2.7328 11.3797C2.88233 10.9215 3.11763 10.6875 3.58827 10.2197C4.48515 9.32821 5.71801 8.26359 7.17219 7.42676M19.4999 14.6335C19.8329 14.3405 20.138 14.0523 20.4117 13.7803L20.4146 13.7772C20.8832 13.3114 21.1182 13.0779 21.2674 12.6206C21.374 12.2938 21.3738 11.7068 21.2672 11.38C21.1178 10.9219 20.8827 10.6877 20.4133 10.2211C18.6338 8.45208 15.5305 6 11.9999 6C11.6624 6 11.3288 6.02241 10.9999 6.06448M13.3228 13.5C12.9702 13.8112 12.5071 14 11.9999 14C10.8953 14 9.99989 13.1046 9.99989 12C9.99989 11.4605 10.2135 10.9711 10.5608 10.6113"/>
								<Path x:Name="showIcon" Margin="1" Stretch="Uniform" Height="20" Width="20" Fill="{StaticResource Editor.Disabled.FontBrush}" Data="M12 6C8.76722 6 5.95965 8.31059 4.2048 11.7955C4.17609 11.8526 4.15483 11.8948 4.1369 11.9316C4.12109 11.964 4.11128 11.9853 4.10486 12C4.11128 12.0147 4.12109 12.036 4.1369 12.0684C4.15483 12.1052 4.17609 12.1474 4.2048 12.2045C5.95965 15.6894 8.76722 18 12 18C15.2328 18 18.0404 15.6894 19.7952 12.2045C19.8239 12.1474 19.8452 12.1052 19.8631 12.0684C19.8789 12.036 19.8888 12.0147 19.8952 12C19.8888 11.9853 19.8789 11.964 19.8631 11.9316C19.8452 11.8948 19.8239 11.8526 19.7952 11.7955C18.0404 8.31059 15.2328 6 12 6ZM2.41849 10.896C4.35818 7.04403 7.7198 4 12 4C16.2802 4 19.6419 7.04403 21.5815 10.896C21.5886 10.91 21.5958 10.9242 21.6032 10.9389C21.6945 11.119 21.8124 11.3515 21.8652 11.6381C21.9071 11.8661 21.9071 12.1339 21.8652 12.3619C21.8124 12.6485 21.6945 12.8811 21.6032 13.0611C21.5958 13.0758 21.5886 13.09 21.5815 13.104C19.6419 16.956 16.2802 20 12 20C7.7198 20 4.35818 16.956 2.41849 13.104C2.41148 13.09 2.40424 13.0758 2.39682 13.0611C2.3055 12.881 2.18759 12.6485 2.13485 12.3619C2.09291 12.1339 2.09291 11.8661 2.13485 11.6381C2.18759 11.3515 2.3055 11.119 2.39682 10.9389C2.40424 10.9242 2.41148 10.91 2.41849 10.896ZM12 10C10.8954 10 10 10.8954 10 12C10 13.1046 10.8954 14 12 14C13.1046 14 14 13.1046 14 12C14 10.8954 13.1046 10 12 10ZM8.00002 12C8.00002 9.79086 9.79088 8 12 8C14.2092 8 16 9.79086 16 12C16 14.2091 14.2092 16 12 16C9.79088 16 8.00002 14.2091 8.00002 12Z"/>
							</Grid>
						</Grid>
						<TextBlock x:Name="notificationTextBlock" Grid.Row="1" Style="{StaticResource EnableDisableNotificationTextBlockStyle}" TextTrimming="CharacterEllipsis" TextWrapping="Wrap"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style><Style TargetType="{x:Type utl:CommandOutputRelay}" x:Key="{x:Type utl:CommandOutputRelay}">
	<Setter Property="Template">
		<Setter.Value>
			<ControlTemplate TargetType="{x:Type utl:CommandOutputRelay}">
				<ScrollViewer Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" x:Name="commandLineMessageBox">
						<i:Interaction.Behaviors>
							<local:ScrollViewerBehavior/>
						</i:Interaction.Behaviors>
						<Border Background="{StaticResource Editor.Window.GrayBrush3}" BorderBrush="{StaticResource Editor.Window.GrayBrush5}" BorderThickness="1" CornerRadius="10" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
						<Grid Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>
							<ItemsControl Grid.ColumnSpan="2" Grid.Row="1" ItemsSource="{Binding Messages, RelativeSource={RelativeSource AncestorType={x:Type utl:CommandOutputRelay}}}" Margin="1" Padding="1">
								<ItemsControl.ItemTemplate>
									<DataTemplate>
										<Grid Margin="1">
											<Border CornerRadius="10" Background="{Binding Background}" Margin="1" Padding="1" HorizontalAlignment="{Binding HorizontalAlignment}">
												<TextBlock Text="{Binding Text}" Margin="1" Padding="1" TextWrapping="Wrap"/>
											</Border>
										</Grid>
									</DataTemplate>
								</ItemsControl.ItemTemplate>
									<i:Interaction.Triggers>
										<i:EventTrigger EventName="ItemsChanged">
										<i:ChangePropertyAction TargetObject="{Binding ElementName=commandLineMessageBox}" PropertyName="VerticalOffset" Value="{Binding ElementName=commandLineMessageBox, Path=ScrollableHeight}"/>
									</i:EventTrigger>
								</i:Interaction.Triggers>
							</ItemsControl>
						</Grid>
					</Border>
				</ScrollViewer>
			</ControlTemplate>
		</Setter.Value>
	</Setter>
</Style>
	<Style TargetType="{x:Type Slider}" x:Key="SwitchAppearance">
		<Setter Property="Background" Value="{StaticResource Editor.GreenBrush}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Slider}">
					<Grid>
						<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="7" Margin="1" Padding="1" Height="15">
							<Track x:Name="PART_Track">
								<Track.Thumb>
									<Thumb Width="11" Height="11">
										<Thumb.Template>
											<ControlTemplate TargetType="{x:Type Thumb}">
												<Ellipse Fill="{TemplateBinding Foreground}"/>
											</ControlTemplate>
										</Thumb.Template>
									</Thumb>
								</Track.Thumb>
							</Track>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<DataTrigger Binding="{Binding Value, RelativeSource={RelativeSource Self}}" Value="0">
				<Setter Property="Background" Value="{StaticResource Editor.RedBrush}" />
			</DataTrigger>
			<Trigger Property="Value" Value="1">
				<Setter Property="Background" Value="{StaticResource Editor.GreenBrush}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style TargetType="{x:Type Slider}" x:Key="SwitchAppearanceWithoutColourChange">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Slider}">
					<Grid>
						<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="7" Margin="1" Padding="1" Height="15">
							<Track x:Name="PART_Track">
								<Track.Thumb>
									<Thumb Width="11" Height="11">
										<Thumb.Template>
											<ControlTemplate TargetType="{x:Type Thumb}">
												<Ellipse Fill="{TemplateBinding Foreground}" x:Name="ellipse"/>
												<ControlTemplate.Triggers>
													<Trigger Property="IsMouseOver" Value="True">
														<Setter Property="Fill" TargetName="ellipse" Value="{StaticResource Editor.Window.GrayBrush2}"/>
													</Trigger>
												</ControlTemplate.Triggers>
											</ControlTemplate>
										</Thumb.Template>
									</Thumb>
								</Track.Thumb>
							</Track>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type utl:DeviceSchematic}" x:Key="{x:Type utl:DeviceSchematic}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type utl:DeviceSchematic}">
					<Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="*"/>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="*"/>
						</Grid.RowDefinitions>
						<Line Grid.Column="0" Grid.Row="0" X1="0" Y1="0" X2="{Binding Width, RelativeSource={RelativeSource AncestorType=Grid}}" Y2="0" Stroke="{StaticResource Editor.Disabled.FontBrush}" VerticalAlignment="Center" Opacity=".9"/>
                        <TextBlock Grid.Column="1" Grid.Row="0" Text="{Binding DeviceWidth, RelativeSource={RelativeSource AncestorType={x:Type utl:DeviceSchematic}}, StringFormat='\{0}px'}" Margin="1" Padding="1" HorizontalAlignment="Center" Foreground="{StaticResource Editor.Disabled.FontBrush}" VerticalAlignment="Top"/>
						<Line Grid.Column="2" Grid.Row="0" X1="0" Y1="0" X2="{Binding Width, RelativeSource={RelativeSource AncestorType=Grid}}" Y2="0" Stroke="{StaticResource Editor.Disabled.FontBrush}" VerticalAlignment="Center" Opacity=".9"/>
						<Line Grid.Column="3" Grid.Row="1" X1="0" Y1="0" X2="0" Y2="{Binding Height, RelativeSource={RelativeSource AncestorType=Grid}}" Stroke="{StaticResource Editor.Disabled.FontBrush}" VerticalAlignment="Stretch" HorizontalAlignment="Center" Opacity=".9"/>
                        <TextBlock Grid.Column="3" Grid.Row="2" Text="{Binding DeviceHeight, RelativeSource={RelativeSource AncestorType={x:Type utl:DeviceSchematic}}, StringFormat='\{0}px'}" Margin="1" Padding="1" HorizontalAlignment="Center" Foreground="{StaticResource Editor.Disabled.FontBrush}" VerticalAlignment="Top"/>
						<Line Grid.Column="3" Grid.Row="3" X1="0" Y1="0" X2="0" Y2="{Binding Height, RelativeSource={RelativeSource AncestorType=Grid}}" Stroke="{StaticResource Editor.Disabled.FontBrush}" VerticalAlignment="Stretch" HorizontalAlignment="Center" Opacity=".9"/>
						<Border Grid.Row="1" Grid.Column="0" Grid.RowSpan="3" Grid.ColumnSpan="3" BorderBrush="{StaticResource Editor.FontBrush}" BorderThickness="2" CornerRadius="10" Margin="1" Padding="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
							<Grid MaxWidth="{TemplateBinding DeviceWidth}" MaxHeight="{TemplateBinding DeviceHeight}">
								<Line Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="3" Grid.RowSpan="3" X1="0" Y1="0" X2="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Grid}}" Y2="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Grid}}" Stroke="{StaticResource Editor.Disabled.FontBrush}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Opacity=".9"/>
                                <TextBlock Text="{Binding DeviceDiagonal, RelativeSource={RelativeSource AncestorType={x:Type utl:DeviceSchematic}}, StringFormat='\{0}&quot;'}" Margin="{TemplateBinding DeviceDiagonal}" VerticalAlignment="Center" HorizontalAlignment="Center" TextTrimming="CharacterEllipsis" Foreground="{StaticResource Editor.Disabled.FontBrush}" Background="{StaticResource Editor.Window.GrayBrush3}" TextAlignment="Center" Padding="1"/>
							</Grid>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ControlTemplate TargetType="{x:Type ComboBoxItem}" x:Key="ComboBoxItemTemplate">
		<Border x:Name="Border" Padding="10,5,10,5" BorderThickness="0" Margin="0">
			<ContentPresenter ContentSource="Content" x:Name="ContentHost" RecognizesAccessKey="True" />
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsHighlighted" Value="true">
				<Setter Property="Background" TargetName="Border" Value="Blue"/>
				<Setter Property="TextElement.Foreground" TargetName="Border" Value="White"/>
			</Trigger>
			<Trigger Property="IsHighlighted" Value="false">
				<Setter Property="Background" TargetName="Border" Value="black"/>
				<Setter Property="TextElement.Foreground" TargetName="Border" Value="White"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
</ResourceDictionary>